/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface GrantsInterface extends ethers.utils.Interface {
  functions: {
    "_activeGrantId()": FunctionFragment;
    "_organizationId()": FunctionFragment;
    "activeGrants(uint256)": FunctionFragment;
    "balances(uint256,address)": FunctionFragment;
    "claimAll(uint256,address)": FunctionFragment;
    "claimGrant(uint256)": FunctionFragment;
    "confirmGrant(uint256,uint256)": FunctionFragment;
    "confirmGrantRevoke(uint256,uint256)": FunctionFragment;
    "confirmWithdrawal(uint256,uint256)": FunctionFragment;
    "createOrg(address[],uint8)": FunctionFragment;
    "deposit(uint256,address,uint256)": FunctionFragment;
    "grantedGrantList(uint256,uint256)": FunctionFragment;
    "members(uint256,address)": FunctionFragment;
    "pendingGrantList(uint256,uint256)": FunctionFragment;
    "pendingGrantRawGrantList(address,uint256)": FunctionFragment;
    "proposeGrant(uint256,uint256,uint256,tuple,address)": FunctionFragment;
    "proposeGrantRevoke(uint256,uint256)": FunctionFragment;
    "proposeRevokeAll(uint256)": FunctionFragment;
    "proposeWithdrawal(uint256,address,address,uint256)": FunctionFragment;
    "proposedGrantIds(uint256)": FunctionFragment;
    "proposedGrantRevokeIds(uint256)": FunctionFragment;
    "proposedGrantRevokes(uint256,uint256)": FunctionFragment;
    "proposedGrants(uint256,uint256)": FunctionFragment;
    "votedGrant(uint256,uint256,address)": FunctionFragment;
    "votedGrantRevoke(uint256,uint256,address)": FunctionFragment;
    "votedWithdrawals(uint256,uint256,address)": FunctionFragment;
    "withdrawalIds(uint256)": FunctionFragment;
    "withdrawals(uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_activeGrantId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_organizationId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "activeGrants",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balances",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "claimAll",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "claimGrant",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "confirmGrant",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "confirmGrantRevoke",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "confirmWithdrawal",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createOrg",
    values: [string[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deposit",
    values: [BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "grantedGrantList",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "members",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "pendingGrantList",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "pendingGrantRawGrantList",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "proposeGrant",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      { tokens: string[]; amounts: BigNumberish[] },
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "proposeGrantRevoke",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "proposeRevokeAll",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "proposeWithdrawal",
    values: [BigNumberish, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "proposedGrantIds",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "proposedGrantRevokeIds",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "proposedGrantRevokes",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "proposedGrants",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "votedGrant",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "votedGrantRevoke",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "votedWithdrawals",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawalIds",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawals",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "_activeGrantId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_organizationId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "activeGrants",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "balances", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "claimAll", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "claimGrant", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "confirmGrant",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "confirmGrantRevoke",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "confirmWithdrawal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "createOrg", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "deposit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "grantedGrantList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "members", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pendingGrantList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pendingGrantRawGrantList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposeGrant",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposeGrantRevoke",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposeRevokeAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposeWithdrawal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposedGrantIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposedGrantRevokeIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposedGrantRevokes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposedGrants",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "votedGrant", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "votedGrantRevoke",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "votedWithdrawals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawalIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawals",
    data: BytesLike
  ): Result;

  events: {
    "Deposit(uint256,address,address,uint256)": EventFragment;
    "grantActivated(uint256,uint256,uint256,uint256,uint256,tuple)": EventFragment;
    "grantClaimed(uint256,uint256)": EventFragment;
    "grantProposed(uint256,uint256,uint256,uint256,tuple)": EventFragment;
    "orgCreated(uint256,address[],uint8)": EventFragment;
    "revokeActivated(uint256,uint256)": EventFragment;
    "revokeProposed(uint256,uint256)": EventFragment;
    "withdrawal(uint256,uint256,address,address,uint256)": EventFragment;
    "withdrawalProposed(uint256,uint256,address,address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Deposit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "grantActivated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "grantClaimed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "grantProposed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "orgCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "revokeActivated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "revokeProposed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "withdrawal"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "withdrawalProposed"): EventFragment;
}

export class Grants extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: GrantsInterface;

  functions: {
    _activeGrantId(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _value: BigNumber }>;

    "_activeGrantId()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _value: BigNumber }>;

    _organizationId(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _value: BigNumber }>;

    "_organizationId()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _value: BigNumber }>;

    activeGrants(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        BigNumber,
        BigNumber,
        [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
        string
      ] & {
        granter: BigNumber;
        grantee: BigNumber;
        unlockTime: BigNumber;
        tokens: [string[], BigNumber[]] & {
          tokens: string[];
          amounts: BigNumber[];
        };
        rawGrantee: string;
      }
    >;

    "activeGrants(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        BigNumber,
        BigNumber,
        [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
        string
      ] & {
        granter: BigNumber;
        grantee: BigNumber;
        unlockTime: BigNumber;
        tokens: [string[], BigNumber[]] & {
          tokens: string[];
          amounts: BigNumber[];
        };
        rawGrantee: string;
      }
    >;

    balances(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "balances(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    claimAll(
      grantee: BigNumberish,
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "claimAll(uint256,address)"(
      grantee: BigNumberish,
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claimGrant(
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "claimGrant(uint256)"(
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    confirmGrant(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "confirmGrant(uint256,uint256)"(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    confirmGrantRevoke(
      orgId: BigNumberish,
      revokeId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "confirmGrantRevoke(uint256,uint256)"(
      orgId: BigNumberish,
      revokeId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    confirmWithdrawal(
      orgId: BigNumberish,
      withdrawalId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "confirmWithdrawal(uint256,uint256)"(
      orgId: BigNumberish,
      withdrawalId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createOrg(
      _members: string[],
      _requiredConfirmations: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "createOrg(address[],uint8)"(
      _members: string[],
      _requiredConfirmations: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    deposit(
      orgId: BigNumberish,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "deposit(uint256,address,uint256)"(
      orgId: BigNumberish,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    grantedGrantList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "grantedGrantList(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    members(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "members(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    pendingGrantList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "pendingGrantList(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    pendingGrantRawGrantList(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "pendingGrantRawGrantList(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    proposeGrant(
      orgId: BigNumberish,
      grantee: BigNumberish,
      unlockTime: BigNumberish,
      tokens: { tokens: string[]; amounts: BigNumberish[] },
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "proposeGrant(uint256,uint256,uint256,(address[],uint256[]),address)"(
      orgId: BigNumberish,
      grantee: BigNumberish,
      unlockTime: BigNumberish,
      tokens: { tokens: string[]; amounts: BigNumberish[] },
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    proposeGrantRevoke(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "proposeGrantRevoke(uint256,uint256)"(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    proposeRevokeAll(
      orgId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "proposeRevokeAll(uint256)"(
      orgId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    proposeWithdrawal(
      orgId: BigNumberish,
      destination: string,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "proposeWithdrawal(uint256,address,address,uint256)"(
      orgId: BigNumberish,
      destination: string,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    proposedGrantIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _value: BigNumber }>;

    "proposedGrantIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _value: BigNumber }>;

    proposedGrantRevokeIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _value: BigNumber }>;

    "proposedGrantRevokeIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _value: BigNumber }>;

    proposedGrantRevokes(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, [BigNumber] & { _value: BigNumber }] & {
        proposedIdToRevoke: BigNumber;
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;

    "proposedGrantRevokes(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, [BigNumber] & { _value: BigNumber }] & {
        proposedIdToRevoke: BigNumber;
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;

    proposedGrants(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          BigNumber,
          BigNumber,
          [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
          string
        ] & {
          granter: BigNumber;
          grantee: BigNumber;
          unlockTime: BigNumber;
          tokens: [string[], BigNumber[]] & {
            tokens: string[];
            amounts: BigNumber[];
          };
          rawGrantee: string;
        },
        [BigNumber] & { _value: BigNumber }
      ] & {
        proposedGrant: [
          BigNumber,
          BigNumber,
          BigNumber,
          [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
          string
        ] & {
          granter: BigNumber;
          grantee: BigNumber;
          unlockTime: BigNumber;
          tokens: [string[], BigNumber[]] & {
            tokens: string[];
            amounts: BigNumber[];
          };
          rawGrantee: string;
        };
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;

    "proposedGrants(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          BigNumber,
          BigNumber,
          [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
          string
        ] & {
          granter: BigNumber;
          grantee: BigNumber;
          unlockTime: BigNumber;
          tokens: [string[], BigNumber[]] & {
            tokens: string[];
            amounts: BigNumber[];
          };
          rawGrantee: string;
        },
        [BigNumber] & { _value: BigNumber }
      ] & {
        proposedGrant: [
          BigNumber,
          BigNumber,
          BigNumber,
          [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
          string
        ] & {
          granter: BigNumber;
          grantee: BigNumber;
          unlockTime: BigNumber;
          tokens: [string[], BigNumber[]] & {
            tokens: string[];
            amounts: BigNumber[];
          };
          rawGrantee: string;
        };
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;

    votedGrant(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "votedGrant(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    votedGrantRevoke(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "votedGrantRevoke(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    votedWithdrawals(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "votedWithdrawals(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    withdrawalIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _value: BigNumber }>;

    "withdrawalIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _value: BigNumber }>;

    withdrawals(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string, [BigNumber] & { _value: BigNumber }] & {
        token: string;
        amount: BigNumber;
        destination: string;
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;

    "withdrawals(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string, [BigNumber] & { _value: BigNumber }] & {
        token: string;
        amount: BigNumber;
        destination: string;
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;
  };

  _activeGrantId(overrides?: CallOverrides): Promise<BigNumber>;

  "_activeGrantId()"(overrides?: CallOverrides): Promise<BigNumber>;

  _organizationId(overrides?: CallOverrides): Promise<BigNumber>;

  "_organizationId()"(overrides?: CallOverrides): Promise<BigNumber>;

  activeGrants(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      BigNumber,
      BigNumber,
      [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
      string
    ] & {
      granter: BigNumber;
      grantee: BigNumber;
      unlockTime: BigNumber;
      tokens: [string[], BigNumber[]] & {
        tokens: string[];
        amounts: BigNumber[];
      };
      rawGrantee: string;
    }
  >;

  "activeGrants(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      BigNumber,
      BigNumber,
      [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
      string
    ] & {
      granter: BigNumber;
      grantee: BigNumber;
      unlockTime: BigNumber;
      tokens: [string[], BigNumber[]] & {
        tokens: string[];
        amounts: BigNumber[];
      };
      rawGrantee: string;
    }
  >;

  balances(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "balances(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  claimAll(
    grantee: BigNumberish,
    rawGrantee: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "claimAll(uint256,address)"(
    grantee: BigNumberish,
    rawGrantee: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claimGrant(
    grantId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "claimGrant(uint256)"(
    grantId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  confirmGrant(
    orgId: BigNumberish,
    grantId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "confirmGrant(uint256,uint256)"(
    orgId: BigNumberish,
    grantId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  confirmGrantRevoke(
    orgId: BigNumberish,
    revokeId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "confirmGrantRevoke(uint256,uint256)"(
    orgId: BigNumberish,
    revokeId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  confirmWithdrawal(
    orgId: BigNumberish,
    withdrawalId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "confirmWithdrawal(uint256,uint256)"(
    orgId: BigNumberish,
    withdrawalId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createOrg(
    _members: string[],
    _requiredConfirmations: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "createOrg(address[],uint8)"(
    _members: string[],
    _requiredConfirmations: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  deposit(
    orgId: BigNumberish,
    token: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "deposit(uint256,address,uint256)"(
    orgId: BigNumberish,
    token: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  grantedGrantList(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "grantedGrantList(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  members(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "members(uint256,address)"(
    arg0: BigNumberish,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  pendingGrantList(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "pendingGrantList(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  pendingGrantRawGrantList(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "pendingGrantRawGrantList(address,uint256)"(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  proposeGrant(
    orgId: BigNumberish,
    grantee: BigNumberish,
    unlockTime: BigNumberish,
    tokens: { tokens: string[]; amounts: BigNumberish[] },
    rawGrantee: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "proposeGrant(uint256,uint256,uint256,(address[],uint256[]),address)"(
    orgId: BigNumberish,
    grantee: BigNumberish,
    unlockTime: BigNumberish,
    tokens: { tokens: string[]; amounts: BigNumberish[] },
    rawGrantee: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  proposeGrantRevoke(
    orgId: BigNumberish,
    grantId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "proposeGrantRevoke(uint256,uint256)"(
    orgId: BigNumberish,
    grantId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  proposeRevokeAll(
    orgId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "proposeRevokeAll(uint256)"(
    orgId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  proposeWithdrawal(
    orgId: BigNumberish,
    destination: string,
    token: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "proposeWithdrawal(uint256,address,address,uint256)"(
    orgId: BigNumberish,
    destination: string,
    token: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  proposedGrantIds(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "proposedGrantIds(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  proposedGrantRevokeIds(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "proposedGrantRevokeIds(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  proposedGrantRevokes(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, [BigNumber] & { _value: BigNumber }] & {
      proposedIdToRevoke: BigNumber;
      confirmations: [BigNumber] & { _value: BigNumber };
    }
  >;

  "proposedGrantRevokes(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, [BigNumber] & { _value: BigNumber }] & {
      proposedIdToRevoke: BigNumber;
      confirmations: [BigNumber] & { _value: BigNumber };
    }
  >;

  proposedGrants(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      [
        BigNumber,
        BigNumber,
        BigNumber,
        [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
        string
      ] & {
        granter: BigNumber;
        grantee: BigNumber;
        unlockTime: BigNumber;
        tokens: [string[], BigNumber[]] & {
          tokens: string[];
          amounts: BigNumber[];
        };
        rawGrantee: string;
      },
      [BigNumber] & { _value: BigNumber }
    ] & {
      proposedGrant: [
        BigNumber,
        BigNumber,
        BigNumber,
        [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
        string
      ] & {
        granter: BigNumber;
        grantee: BigNumber;
        unlockTime: BigNumber;
        tokens: [string[], BigNumber[]] & {
          tokens: string[];
          amounts: BigNumber[];
        };
        rawGrantee: string;
      };
      confirmations: [BigNumber] & { _value: BigNumber };
    }
  >;

  "proposedGrants(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      [
        BigNumber,
        BigNumber,
        BigNumber,
        [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
        string
      ] & {
        granter: BigNumber;
        grantee: BigNumber;
        unlockTime: BigNumber;
        tokens: [string[], BigNumber[]] & {
          tokens: string[];
          amounts: BigNumber[];
        };
        rawGrantee: string;
      },
      [BigNumber] & { _value: BigNumber }
    ] & {
      proposedGrant: [
        BigNumber,
        BigNumber,
        BigNumber,
        [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
        string
      ] & {
        granter: BigNumber;
        grantee: BigNumber;
        unlockTime: BigNumber;
        tokens: [string[], BigNumber[]] & {
          tokens: string[];
          amounts: BigNumber[];
        };
        rawGrantee: string;
      };
      confirmations: [BigNumber] & { _value: BigNumber };
    }
  >;

  votedGrant(
    arg0: BigNumberish,
    arg1: BigNumberish,
    arg2: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "votedGrant(uint256,uint256,address)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    arg2: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  votedGrantRevoke(
    arg0: BigNumberish,
    arg1: BigNumberish,
    arg2: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "votedGrantRevoke(uint256,uint256,address)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    arg2: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  votedWithdrawals(
    arg0: BigNumberish,
    arg1: BigNumberish,
    arg2: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "votedWithdrawals(uint256,uint256,address)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    arg2: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  withdrawalIds(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "withdrawalIds(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  withdrawals(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, string, [BigNumber] & { _value: BigNumber }] & {
      token: string;
      amount: BigNumber;
      destination: string;
      confirmations: [BigNumber] & { _value: BigNumber };
    }
  >;

  "withdrawals(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, BigNumber, string, [BigNumber] & { _value: BigNumber }] & {
      token: string;
      amount: BigNumber;
      destination: string;
      confirmations: [BigNumber] & { _value: BigNumber };
    }
  >;

  callStatic: {
    _activeGrantId(overrides?: CallOverrides): Promise<BigNumber>;

    "_activeGrantId()"(overrides?: CallOverrides): Promise<BigNumber>;

    _organizationId(overrides?: CallOverrides): Promise<BigNumber>;

    "_organizationId()"(overrides?: CallOverrides): Promise<BigNumber>;

    activeGrants(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        BigNumber,
        BigNumber,
        [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
        string
      ] & {
        granter: BigNumber;
        grantee: BigNumber;
        unlockTime: BigNumber;
        tokens: [string[], BigNumber[]] & {
          tokens: string[];
          amounts: BigNumber[];
        };
        rawGrantee: string;
      }
    >;

    "activeGrants(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        BigNumber,
        BigNumber,
        [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
        string
      ] & {
        granter: BigNumber;
        grantee: BigNumber;
        unlockTime: BigNumber;
        tokens: [string[], BigNumber[]] & {
          tokens: string[];
          amounts: BigNumber[];
        };
        rawGrantee: string;
      }
    >;

    balances(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balances(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    claimAll(
      grantee: BigNumberish,
      rawGrantee: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "claimAll(uint256,address)"(
      grantee: BigNumberish,
      rawGrantee: string,
      overrides?: CallOverrides
    ): Promise<void>;

    claimGrant(grantId: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "claimGrant(uint256)"(
      grantId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    confirmGrant(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "confirmGrant(uint256,uint256)"(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    confirmGrantRevoke(
      orgId: BigNumberish,
      revokeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "confirmGrantRevoke(uint256,uint256)"(
      orgId: BigNumberish,
      revokeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    confirmWithdrawal(
      orgId: BigNumberish,
      withdrawalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "confirmWithdrawal(uint256,uint256)"(
      orgId: BigNumberish,
      withdrawalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    createOrg(
      _members: string[],
      _requiredConfirmations: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "createOrg(address[],uint8)"(
      _members: string[],
      _requiredConfirmations: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    deposit(
      orgId: BigNumberish,
      token: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "deposit(uint256,address,uint256)"(
      orgId: BigNumberish,
      token: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    grantedGrantList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "grantedGrantList(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    members(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "members(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    pendingGrantList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pendingGrantList(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pendingGrantRawGrantList(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pendingGrantRawGrantList(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proposeGrant(
      orgId: BigNumberish,
      grantee: BigNumberish,
      unlockTime: BigNumberish,
      tokens: { tokens: string[]; amounts: BigNumberish[] },
      rawGrantee: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "proposeGrant(uint256,uint256,uint256,(address[],uint256[]),address)"(
      orgId: BigNumberish,
      grantee: BigNumberish,
      unlockTime: BigNumberish,
      tokens: { tokens: string[]; amounts: BigNumberish[] },
      rawGrantee: string,
      overrides?: CallOverrides
    ): Promise<void>;

    proposeGrantRevoke(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "proposeGrantRevoke(uint256,uint256)"(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    proposeRevokeAll(
      orgId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "proposeRevokeAll(uint256)"(
      orgId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    proposeWithdrawal(
      orgId: BigNumberish,
      destination: string,
      token: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "proposeWithdrawal(uint256,address,address,uint256)"(
      orgId: BigNumberish,
      destination: string,
      token: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    proposedGrantIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "proposedGrantIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proposedGrantRevokeIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "proposedGrantRevokeIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proposedGrantRevokes(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, [BigNumber] & { _value: BigNumber }] & {
        proposedIdToRevoke: BigNumber;
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;

    "proposedGrantRevokes(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, [BigNumber] & { _value: BigNumber }] & {
        proposedIdToRevoke: BigNumber;
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;

    proposedGrants(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          BigNumber,
          BigNumber,
          [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
          string
        ] & {
          granter: BigNumber;
          grantee: BigNumber;
          unlockTime: BigNumber;
          tokens: [string[], BigNumber[]] & {
            tokens: string[];
            amounts: BigNumber[];
          };
          rawGrantee: string;
        },
        [BigNumber] & { _value: BigNumber }
      ] & {
        proposedGrant: [
          BigNumber,
          BigNumber,
          BigNumber,
          [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
          string
        ] & {
          granter: BigNumber;
          grantee: BigNumber;
          unlockTime: BigNumber;
          tokens: [string[], BigNumber[]] & {
            tokens: string[];
            amounts: BigNumber[];
          };
          rawGrantee: string;
        };
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;

    "proposedGrants(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          BigNumber,
          BigNumber,
          [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
          string
        ] & {
          granter: BigNumber;
          grantee: BigNumber;
          unlockTime: BigNumber;
          tokens: [string[], BigNumber[]] & {
            tokens: string[];
            amounts: BigNumber[];
          };
          rawGrantee: string;
        },
        [BigNumber] & { _value: BigNumber }
      ] & {
        proposedGrant: [
          BigNumber,
          BigNumber,
          BigNumber,
          [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] },
          string
        ] & {
          granter: BigNumber;
          grantee: BigNumber;
          unlockTime: BigNumber;
          tokens: [string[], BigNumber[]] & {
            tokens: string[];
            amounts: BigNumber[];
          };
          rawGrantee: string;
        };
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;

    votedGrant(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "votedGrant(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    votedGrantRevoke(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "votedGrantRevoke(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    votedWithdrawals(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "votedWithdrawals(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    withdrawalIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "withdrawalIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawals(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string, [BigNumber] & { _value: BigNumber }] & {
        token: string;
        amount: BigNumber;
        destination: string;
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;

    "withdrawals(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber, string, [BigNumber] & { _value: BigNumber }] & {
        token: string;
        amount: BigNumber;
        destination: string;
        confirmations: [BigNumber] & { _value: BigNumber };
      }
    >;
  };

  filters: {
    Deposit(
      orgId: BigNumberish | null,
      deposistor: string | null,
      tokenAddress: null,
      amount: null
    ): TypedEventFilter<
      [BigNumber, string, string, BigNumber],
      {
        orgId: BigNumber;
        deposistor: string;
        tokenAddress: string;
        amount: BigNumber;
      }
    >;

    grantActivated(
      granter: BigNumberish | null,
      pendingGrantId: BigNumberish | null,
      grantee: BigNumberish | null,
      activeGrantId: null,
      unlockTime: null,
      tokens: null
    ): TypedEventFilter<
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] }
      ],
      {
        granter: BigNumber;
        pendingGrantId: BigNumber;
        grantee: BigNumber;
        activeGrantId: BigNumber;
        unlockTime: BigNumber;
        tokens: [string[], BigNumber[]] & {
          tokens: string[];
          amounts: BigNumber[];
        };
      }
    >;

    grantClaimed(
      grantId: BigNumberish | null,
      grantee: BigNumberish | null
    ): TypedEventFilter<
      [BigNumber, BigNumber],
      { grantId: BigNumber; grantee: BigNumber }
    >;

    grantProposed(
      granter: BigNumberish | null,
      grantId: BigNumberish | null,
      grantee: BigNumberish | null,
      unlockTime: null,
      tokens: null
    ): TypedEventFilter<
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        [string[], BigNumber[]] & { tokens: string[]; amounts: BigNumber[] }
      ],
      {
        granter: BigNumber;
        grantId: BigNumber;
        grantee: BigNumber;
        unlockTime: BigNumber;
        tokens: [string[], BigNumber[]] & {
          tokens: string[];
          amounts: BigNumber[];
        };
      }
    >;

    orgCreated(
      orgId: BigNumberish | null,
      members: null,
      requiredConfirmations: null
    ): TypedEventFilter<
      [BigNumber, string[], number],
      { orgId: BigNumber; members: string[]; requiredConfirmations: number }
    >;

    revokeActivated(
      revokeId: BigNumberish | null,
      grantId: BigNumberish | null
    ): TypedEventFilter<
      [BigNumber, BigNumber],
      { revokeId: BigNumber; grantId: BigNumber }
    >;

    revokeProposed(
      revokeId: BigNumberish | null,
      grantId: BigNumberish | null
    ): TypedEventFilter<
      [BigNumber, BigNumber],
      { revokeId: BigNumber; grantId: BigNumber }
    >;

    withdrawal(
      orgId: BigNumberish | null,
      withdrawalId: BigNumberish | null,
      destination: null,
      tokenAddress: null,
      amount: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, string, string, BigNumber],
      {
        orgId: BigNumber;
        withdrawalId: BigNumber;
        destination: string;
        tokenAddress: string;
        amount: BigNumber;
      }
    >;

    withdrawalProposed(
      orgId: BigNumberish | null,
      withdrawalId: BigNumberish | null,
      proposer: string | null,
      destination: null,
      tokenAddress: null,
      amount: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, string, string, string, BigNumber],
      {
        orgId: BigNumber;
        withdrawalId: BigNumber;
        proposer: string;
        destination: string;
        tokenAddress: string;
        amount: BigNumber;
      }
    >;
  };

  estimateGas: {
    _activeGrantId(overrides?: CallOverrides): Promise<BigNumber>;

    "_activeGrantId()"(overrides?: CallOverrides): Promise<BigNumber>;

    _organizationId(overrides?: CallOverrides): Promise<BigNumber>;

    "_organizationId()"(overrides?: CallOverrides): Promise<BigNumber>;

    activeGrants(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "activeGrants(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balances(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balances(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    claimAll(
      grantee: BigNumberish,
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "claimAll(uint256,address)"(
      grantee: BigNumberish,
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claimGrant(
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "claimGrant(uint256)"(
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    confirmGrant(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "confirmGrant(uint256,uint256)"(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    confirmGrantRevoke(
      orgId: BigNumberish,
      revokeId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "confirmGrantRevoke(uint256,uint256)"(
      orgId: BigNumberish,
      revokeId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    confirmWithdrawal(
      orgId: BigNumberish,
      withdrawalId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "confirmWithdrawal(uint256,uint256)"(
      orgId: BigNumberish,
      withdrawalId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createOrg(
      _members: string[],
      _requiredConfirmations: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "createOrg(address[],uint8)"(
      _members: string[],
      _requiredConfirmations: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    deposit(
      orgId: BigNumberish,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "deposit(uint256,address,uint256)"(
      orgId: BigNumberish,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    grantedGrantList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "grantedGrantList(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    members(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "members(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pendingGrantList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pendingGrantList(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pendingGrantRawGrantList(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pendingGrantRawGrantList(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proposeGrant(
      orgId: BigNumberish,
      grantee: BigNumberish,
      unlockTime: BigNumberish,
      tokens: { tokens: string[]; amounts: BigNumberish[] },
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "proposeGrant(uint256,uint256,uint256,(address[],uint256[]),address)"(
      orgId: BigNumberish,
      grantee: BigNumberish,
      unlockTime: BigNumberish,
      tokens: { tokens: string[]; amounts: BigNumberish[] },
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    proposeGrantRevoke(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "proposeGrantRevoke(uint256,uint256)"(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    proposeRevokeAll(
      orgId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "proposeRevokeAll(uint256)"(
      orgId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    proposeWithdrawal(
      orgId: BigNumberish,
      destination: string,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "proposeWithdrawal(uint256,address,address,uint256)"(
      orgId: BigNumberish,
      destination: string,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    proposedGrantIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "proposedGrantIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proposedGrantRevokeIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "proposedGrantRevokeIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proposedGrantRevokes(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "proposedGrantRevokes(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proposedGrants(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "proposedGrants(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    votedGrant(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "votedGrant(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    votedGrantRevoke(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "votedGrantRevoke(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    votedWithdrawals(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "votedWithdrawals(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawalIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "withdrawalIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawals(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "withdrawals(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _activeGrantId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "_activeGrantId()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _organizationId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "_organizationId()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    activeGrants(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "activeGrants(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    balances(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balances(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    claimAll(
      grantee: BigNumberish,
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "claimAll(uint256,address)"(
      grantee: BigNumberish,
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claimGrant(
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "claimGrant(uint256)"(
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    confirmGrant(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "confirmGrant(uint256,uint256)"(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    confirmGrantRevoke(
      orgId: BigNumberish,
      revokeId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "confirmGrantRevoke(uint256,uint256)"(
      orgId: BigNumberish,
      revokeId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    confirmWithdrawal(
      orgId: BigNumberish,
      withdrawalId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "confirmWithdrawal(uint256,uint256)"(
      orgId: BigNumberish,
      withdrawalId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createOrg(
      _members: string[],
      _requiredConfirmations: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "createOrg(address[],uint8)"(
      _members: string[],
      _requiredConfirmations: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    deposit(
      orgId: BigNumberish,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "deposit(uint256,address,uint256)"(
      orgId: BigNumberish,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    grantedGrantList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "grantedGrantList(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    members(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "members(uint256,address)"(
      arg0: BigNumberish,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pendingGrantList(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pendingGrantList(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pendingGrantRawGrantList(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pendingGrantRawGrantList(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    proposeGrant(
      orgId: BigNumberish,
      grantee: BigNumberish,
      unlockTime: BigNumberish,
      tokens: { tokens: string[]; amounts: BigNumberish[] },
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "proposeGrant(uint256,uint256,uint256,(address[],uint256[]),address)"(
      orgId: BigNumberish,
      grantee: BigNumberish,
      unlockTime: BigNumberish,
      tokens: { tokens: string[]; amounts: BigNumberish[] },
      rawGrantee: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    proposeGrantRevoke(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "proposeGrantRevoke(uint256,uint256)"(
      orgId: BigNumberish,
      grantId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    proposeRevokeAll(
      orgId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "proposeRevokeAll(uint256)"(
      orgId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    proposeWithdrawal(
      orgId: BigNumberish,
      destination: string,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "proposeWithdrawal(uint256,address,address,uint256)"(
      orgId: BigNumberish,
      destination: string,
      token: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    proposedGrantIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "proposedGrantIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    proposedGrantRevokeIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "proposedGrantRevokeIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    proposedGrantRevokes(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "proposedGrantRevokes(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    proposedGrants(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "proposedGrants(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    votedGrant(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "votedGrant(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    votedGrantRevoke(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "votedGrantRevoke(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    votedWithdrawals(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "votedWithdrawals(uint256,uint256,address)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdrawalIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "withdrawalIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdrawals(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "withdrawals(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
